#%>%filter(m_w_f == 1, user_id %in% one_week)
p
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list3 <- list()
plot_tests3 <- function(user){
for(var_name in names(complete_batteries)[9:14]){
c <- ggplot(subset(complete_batteries, user_id == user), aes_string(x = "time_elapsed", y = var_name)) +
geom_line() +
geom_point( size = 1, shape = 21, fill = "white") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot_list3[[var_name]] <- c
}
plot_list3
}
indiv_tests <- plot_tests3(1465)
p <- ggplotly(plot_list2[[1]])
q <- ggplotly(indiv_tests[[1]])
plot_list2[[1]]
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)") + ylim(10)
plot_list2[[var_name]] <- b
}
plot_list3 <- list()
?ylim
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)") + ylim(15)
plot_list2[[var_name]] <- b
}
complete_batteries <- readRDS(file = "/Users/Niha/BrainCheck_code/Niha_Analysis/R/CKD_batteries.Rda")
library('dplyr')
library('lubridate')
library('ggplot2')
library('scales')
library('janitor')
#time elapsed from very first test taken
#complete_batteries <- complete_batteries %>% mutate(time_elapsed = (as.period(interval("2017-06-12 12:06:45 UTC", created_at))))
complete_batteries<- complete_batteries %>% group_by(user_id) %>% arrange(battery_id) %>% mutate(first_test_date = created_at[1])
complete_batteries$time_elapsed <- difftime(complete_batteries$created_at,complete_batteries$first_test_date, units='hours')
participants <- complete_batteries %>% group_by(user_id) %>% summarise(n = length(user_id))
##first 3 tests----
#
# three_tests <- complete_batteries %>% slice(1:3)
# first <- seq(1, nrow(three_tests), by = 3)
# second <- seq(2, nrow(three_tests), by = 3)
# third  <- seq(3, nrow(three_tests), by = 3)
# three_tests$test_num <- ""
# three_tests[first, "test_num"] <- "T1"
# three_tests[second, "test_num"] <- "T2"
# three_tests[third, "test_num"] <- "T3"
###ggplot function to produce faceted plots
##1 week participants
one_week <- c(1463, 1459, 1465, 1464, 1460, 1461)
#filter batteries by MWF (14 participants) or TR (8 participants)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
#%>%filter(m_w_f == 1, user_id %in% one_week)
#Plots ------
# plot_list <- list()
# plot_tests <- for(var_name in names(complete_batteries)[9:14]){
#   a <- ggplot(complete_batteries, aes_string(x = "test_num", y = var_name)) +
#     geom_line(aes(group = user_id, colour = as.integer(user_id))) +
#     geom_point( size = 1, shape = 21, fill = "white") +
#     facet_grid(slum_category ~ agecat ) +
#     scale_colour_gradient(name = "user_id", low = "orange", high = "blue")
#    plot_list[[var_name]] <- a
# }
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2[[1]]
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") + ylim(0,10)
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") + ylim(0,10) +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2[[1]]
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2[[1]]
plot_list2[[1]] + ylim(0,7)
plot_list2[[1]] + ylim(0,6)
plot_list2[[2]]
plot_list2[[2]] + ylim(0,10)
plot_list2[[2]]
plot_list2[[2]] + ylim(0,10)
plot_list2[[2]] + ylim(0,7.5)
plot_list2[[3]]
plot_list2[[4]]
plot_list2[[5]]
plot_list2[[6]]
plot_list2[[6]] + ylim(0,10)
View(complete_batteries)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(blah = sum(time_elapsed))
#Read in cleaned dataframe-----
complete_batteries <- readRDS(file = "/Users/Niha/BrainCheck_code/Niha_Analysis/R/CKD_batteries.Rda")
library('dplyr')
library('lubridate')
library('ggplot2')
library('scales')
library('janitor')
#time elapsed from very first test taken
#complete_batteries <- complete_batteries %>% mutate(time_elapsed = (as.period(interval("2017-06-12 12:06:45 UTC", created_at))))
complete_batteries<- complete_batteries %>% group_by(user_id) %>% arrange(battery_id) %>% mutate(first_test_date = created_at[1])
complete_batteries$time_elapsed <- difftime(complete_batteries$created_at,complete_batteries$first_test_date, units='hours')
participants <- complete_batteries %>% group_by(user_id) %>% summarise(n = length(user_id))
##first 3 tests----
#
# three_tests <- complete_batteries %>% slice(1:3)
# first <- seq(1, nrow(three_tests), by = 3)
# second <- seq(2, nrow(three_tests), by = 3)
# third  <- seq(3, nrow(three_tests), by = 3)
# three_tests$test_num <- ""
# three_tests[first, "test_num"] <- "T1"
# three_tests[second, "test_num"] <- "T2"
# three_tests[third, "test_num"] <- "T3"
###ggplot function to produce faceted plots
##1 week participants
one_week <- c(1463, 1459, 1465, 1464, 1460, 1461)
#filter batteries by MWF (14 participants) or TR (8 participants)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(blah = sum(time_elapsed))
View(summed_time)
>% filter(time_sum >= 1000)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(time_sum = sum(time_elapsed)) %>% filter(time_sum >= 1000)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id)
View(complete_batteries)
#Read in cleaned dataframe-----
complete_batteries <- readRDS(file = "/Users/Niha/BrainCheck_code/Niha_Analysis/R/CKD_batteries.Rda")
library('dplyr')
library('lubridate')
library('ggplot2')
library('scales')
library('janitor')
#time elapsed from very first test taken
#complete_batteries <- complete_batteries %>% mutate(time_elapsed = (as.period(interval("2017-06-12 12:06:45 UTC", created_at))))
complete_batteries<- complete_batteries %>% group_by(user_id) %>% arrange(battery_id) %>% mutate(first_test_date = created_at[1])
complete_batteries$time_elapsed <- difftime(complete_batteries$created_at,complete_batteries$first_test_date, units='hours')
participants <- complete_batteries %>% group_by(user_id) %>% summarise(n = length(user_id))
##first 3 tests----
#
# three_tests <- complete_batteries %>% slice(1:3)
# first <- seq(1, nrow(three_tests), by = 3)
# second <- seq(2, nrow(three_tests), by = 3)
# third  <- seq(3, nrow(three_tests), by = 3)
# three_tests$test_num <- ""
# three_tests[first, "test_num"] <- "T1"
# three_tests[second, "test_num"] <- "T2"
# three_tests[third, "test_num"] <- "T3"
###ggplot function to produce faceted plots
##1 week participants
one_week <- c(1463, 1459, 1465, 1464, 1460, 1461)
#filter batteries by MWF (14 participants) or TR (8 participants)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(time_sum = sum(time_elapsed)) %>% filter(time_sum >= 1000)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id)
View(complete_batteries)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(time_sum = sum(time_elapsed)) %>% filter(time_sum >= 1000)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id)
#%>%filter(m_w_f == 1, user_id %in% one_week)
#Plots ------
# plot_list <- list()
# plot_tests <- for(var_name in names(complete_batteries)[9:14]){
#   a <- ggplot(complete_batteries, aes_string(x = "test_num", y = var_name)) +
#     geom_line(aes(group = user_id, colour = as.integer(user_id))) +
#     geom_point( size = 1, shape = 21, fill = "white") +
#     facet_grid(slum_category ~ agecat ) +
#     scale_colour_gradient(name = "user_id", low = "orange", high = "blue")
#    plot_list[[var_name]] <- a
# }
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list3 <- list()
plot_tests3 <- function(user){
for(var_name in names(complete_batteries)[9:14]){
c <- ggplot(subset(complete_batteries, user_id == user), aes_string(x = "time_elapsed", y = var_name)) +
geom_line() +
geom_point( size = 1, shape = 21, fill = "white") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot_list3[[var_name]] <- c
}
plot_list3
}
indiv_tests <- plot_tests3(1465)
p <- ggplotly(plot_list2[[1]])
q <- ggplotly(indiv_tests[[1]])
plot_list2[[1]]
plot_list2[[1]] + ylim(0,5)
plot_list2[[1]] + ylim(0,4)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id) %>% slice(1, length(complete_batteries))
?slice
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id) %>%  nth(1,-1)
complete_batteries
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id)
#Read in cleaned dataframe-----
complete_batteries <- readRDS(file = "/Users/Niha/BrainCheck_code/Niha_Analysis/R/CKD_batteries.Rda")
library('dplyr')
library('lubridate')
library('ggplot2')
library('scales')
library('janitor')
#time elapsed from very first test taken
#complete_batteries <- complete_batteries %>% mutate(time_elapsed = (as.period(interval("2017-06-12 12:06:45 UTC", created_at))))
complete_batteries<- complete_batteries %>% group_by(user_id) %>% arrange(battery_id) %>% mutate(first_test_date = created_at[1])
complete_batteries$time_elapsed <- difftime(complete_batteries$created_at,complete_batteries$first_test_date, units='hours')
participants <- complete_batteries %>% group_by(user_id) %>% summarise(n = length(user_id))
##first 3 tests----
#
# three_tests <- complete_batteries %>% slice(1:3)
# first <- seq(1, nrow(three_tests), by = 3)
# second <- seq(2, nrow(three_tests), by = 3)
# third  <- seq(3, nrow(three_tests), by = 3)
# three_tests$test_num <- ""
# three_tests[first, "test_num"] <- "T1"
# three_tests[second, "test_num"] <- "T2"
# three_tests[third, "test_num"] <- "T3"
###ggplot function to produce faceted plots
##1 week participants
one_week <- c(1463, 1459, 1465, 1464, 1460, 1461)
#filter batteries by MWF (14 participants) or TR (8 participants)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(time_sum = sum(time_elapsed)) %>% filter(time_sum >= 1000)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id) %>% slice(c(1, n()))
View(complete_batteries)
complete_batteries <- readRDS(file = "/Users/Niha/BrainCheck_code/Niha_Analysis/R/CKD_batteries.Rda")
library('dplyr')
library('lubridate')
library('ggplot2')
library('scales')
library('janitor')
#time elapsed from very first test taken
#complete_batteries <- complete_batteries %>% mutate(time_elapsed = (as.period(interval("2017-06-12 12:06:45 UTC", created_at))))
complete_batteries<- complete_batteries %>% group_by(user_id) %>% arrange(battery_id) %>% mutate(first_test_date = created_at[1])
complete_batteries$time_elapsed <- difftime(complete_batteries$created_at,complete_batteries$first_test_date, units='hours')
participants <- complete_batteries %>% group_by(user_id) %>% summarise(n = length(user_id))
##first 3 tests----
#
# three_tests <- complete_batteries %>% slice(1:3)
# first <- seq(1, nrow(three_tests), by = 3)
# second <- seq(2, nrow(three_tests), by = 3)
# third  <- seq(3, nrow(three_tests), by = 3)
# three_tests$test_num <- ""
# three_tests[first, "test_num"] <- "T1"
# three_tests[second, "test_num"] <- "T2"
# three_tests[third, "test_num"] <- "T3"
###ggplot function to produce faceted plots
##1 week participants
one_week <- c(1463, 1459, 1465, 1464, 1460, 1461)
#filter batteries by MWF (14 participants) or TR (8 participants)
complete_batteries <- complete_batteries  %>% filter(user_id %in% participants$user_id)
summed_time <- complete_batteries %>% group_by(user_id) %>% summarise(time_sum = sum(time_elapsed)) %>% filter(time_sum >= 1000)
complete_batteries <- complete_batteries %>% filter(user_id %in% summed_time$user_id) %>% slice(c(1, n()))
#%>%filter(m_w_f == 1, user_id %in% one_week)
#Plots ------
# plot_list <- list()
# plot_tests <- for(var_name in names(complete_batteries)[9:14]){
#   a <- ggplot(complete_batteries, aes_string(x = "test_num", y = var_name)) +
#     geom_line(aes(group = user_id, colour = as.integer(user_id))) +
#     geom_point( size = 1, shape = 21, fill = "white") +
#     facet_grid(slum_category ~ agecat ) +
#     scale_colour_gradient(name = "user_id", low = "orange", high = "blue")
#    plot_list[[var_name]] <- a
# }
plot_list2 <- list()
plot_tests2 <- for(var_name in names(complete_batteries)[9:14]){
b <- ggplot(complete_batteries, aes_string(x = "time_elapsed", y = var_name)) +
geom_line(aes(group = user_id, colour = as.integer(user_id))) +
geom_point( size = 1, shape = 21, fill = "white") +
facet_grid(slum_category ~ .) +
scale_colour_gradient(name = "user_id", low = "orange", high = "blue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time Elapsed (hours)")
plot_list2[[var_name]] <- b
}
plot_list2[[1]]
plot_list2[[2]]
plot_list2[[3]]
plot_list2[[4]]
plot_list2[[5]]
plot_list2[[6]]
?sapply
?sapply
add <- function(x,y) x + y
sapply(1:10, add)
sapply(1:10, add,5)
sapply(1:10, 5, add)
sapply(add, 1:10, 5)
?do.call
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
add
adders[[10]](10)
add <- function(x) {
force(x)
function(y) x + y
}
adders2 <- lapply(1:10, add)
adders2[[1]](10)
adders2[[10]](10)
getAnywhere(plot)
plot
methods(plot)
getAnywhere(plot.default)
?modify
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(devtools)
library(roxygen2)
library(janitor)
library(knitr)
#'Read in csv. Notice how there are extra columns and the column names are not consistently formatted.
#'Let's clean up the column names using a nifty package called janitor
#'if we don't use janitor we could also rename them another way
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA")) %>% clean_names()
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(devtools)
library(roxygen2)
library(janitor)
library(knitr)
install.packages("dplyr")
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(devtools)
library(roxygen2)
library(janitor)
library(knitr)
#'Read in csv. Notice how there are extra columns and the column names are not consistently formatted.
#'Let's clean up the column names using a nifty package called janitor
#'if we don't use janitor we could also rename them another way
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA")) %>% clean_names()
install.packages("tidyr")
install.packages("lubrdiate")
install.packages("lubridate")
install.packages("ggplot2")
install.packages(janitor)
install.packages("janitor")
install.packages("knitr")
install.packages("stringr")
load("~/BrainCheck_code/retest_data.Rda")
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA")) %>% clean_names()
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(devtools)
library(roxygen2)
library(janitor)
library(knitr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(janitor)
library(knitr)
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA")) %>% clean_names()
View(df)
View((df[, colSums(df != "") != 0]))
df[, colSums(df != "") != 0]
test <- df[,colSums(is.na(df))
)
test <- df[,colSums(is.na(df))]
test <- df[,colSums(is.na(df)) < nrow(df)]
View(test)
?colSums
colSums(is.na(df))
colSums(is.na(df)) < nrow(df)
colSums(is.na(df))
knit("knit_intermediate_R.R")
knit("niha_intermediate_R.R")
setwd("~/BrainCheck_code")
knit("niha_intermediate_R.R")
setwd("~/intermediate-R")
knit("niha_intermediate_R.R")
spin("niha_intermediate_R.R")
df <- df %>% distinct()
?group_by
colnames(df)
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(janitor)
library(knitr)
#'Read in csv. Notice how there are extra columns and the column names are not consistently formatted.
#'Let's clean up the column names using a nifty package called janitor
#'if we don't use janitor we could also rename them another way
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA")) %>% clean_names()
colnames(df)
View(df)
df <- df[,colSums(is.na(df)) < nrow(df)]
View(df)
colnames(df)
df %>% group_by(id) %>% summarise (n = lengthi(id))
df %>% group_by(id) %>% summarise (n = length(id))
test <- df %>% group_by(id) %>% summarise (n = length(id))
View(test)
?make.names
#'These are totes some go-to R packages
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(janitor)
library(knitr)
#'Read in csv. Notice how there are extra columns and the column names are not consistently formatted.
#'Let's clean up the column names using a nifty package called janitor
#'if we don't use janitor we could also rename them another way
df <- read.csv("/Users/Niha/Desktop/just_tacos_and_burritos.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
View(df)
colnames(df) <- make.names(colnames(df), unique=TRUE)
View(df)
